/* Global Styles */
*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
}

html {
  $black: #303030;
  $grey: #909090;
  $off-white: #EDEEE9;
  $code: #D8DBCE;
  position: relative;
  overflow-x: hidden;
  scroll-behavior: smooth;
  $sans-serif: 'Inter', sans-serif;
  background-color: $off-white;
  

  .form {
    align-self: center;
  }
 
  button{
    padding: 0 .2rem;
    
    text-decoration: underline;
    text-underline-offset: 4px;
    height: 2.5rem;
    
  }

  button:hover{

    text-underline-offset: 5px;
  }

  
  textarea {
    resize: none;
    overflow:hidden;
  }

  .form__input__textarea {
    width: 100%;
    height: 7.5rem;
    padding: 1rem 1rem;
    border: 1px solid $black;
    border-radius: 2px;
    margin: 0.625rem 0;
    transition: all 250ms;
   
    
    // This is basically saying when the form__input class is in focus
    &:focus {
      outline: none;
     
    }
    
    // How to read this:
    /* When the input field (.form__input) is in focus, 
       transform the .form__label and change colors*/
    /* ALSO, if the input field's placeholder is NOT shown (when the input field has content),
       transform the .form__label and change colors. */
    &:focus + .form__label, &:not(:placeholder-shown) + .form__label {
      transform: translateY(-9.8rem) scale(1);
    
    }
    
    /* THIS PART IS IMPORTANT!! */
    /* The block below hides the placeholder entirely. */
    /* For all intents and purposes, the placeholder no longer exists. */
    /* What shows on the input field is only the label*. */
    /* HOWEVER, the input fields still recognizes that the placeholder exists!*/
    /* The placeholder is just invisible. We need the placeholder to exist for
       some weird CSS stuff. If we skip this, we can't make it CSS-only. */
    &::placeholder {
        display: none;
        color: transparent;
      
        // Prevents users from highlighting the placeholder.
        -webkit-user-select: none; /* Safari */
        -ms-user-select: none; /* IE 10 and IE 11 */
        user-select: none; /* Standard syntax */
    }
    

  }



  // I would use the BEM method here for declaring styles,
  // but for the sake of clarity, I decided not to.*

  // Just some basic input field styling.
  .form__input {
    width: 100%;
    height: 2.5rem;
    padding: 1rem 1rem;
    border: 1px solid $black;
    border-radius: 2px;
    margin: 0.625rem auto;
    transition: all 250ms;
   
    

    // How to read this:
    /* When the input field (.form__input) is in focus, 
       transform the .form__label and change colors*/
    /* ALSO, if the input field's placeholder is NOT shown (when the input field has content),
       transform the .form__label and change colors. */
    &:focus + .form__label, &:not(:placeholder-shown) + .form__label {
      transform: translateY(-4.50rem) scale(1);
      
    }
    
    /* THIS PART IS IMPORTANT!! */
    /* The block below hides the placeholder entirely. */
    /* For all intents and purposes, the placeholder no longer exists. */
    /* What shows on the input field is only the label*. */
    /* HOWEVER, the input fields still recognizes that the placeholder exists!*/
    /* The placeholder is just invisible. We need the placeholder to exist for
       some weird CSS stuff. If we skip this, we can't make it CSS-only. */
    &::placeholder {
        display: none;
        color: transparent;
      
        // Prevents users from highlighting the placeholder.
        -webkit-user-select: none; /* Safari */
        -ms-user-select: none; /* IE 10 and IE 11 */
        user-select: none; /* Standard syntax */
    }
    
 
  }


  .form__label {
    font-size: 1rem;
    color: $black;
    display: block;
    
    /* Moves the label on TOP of the placeholder */
    /* You'll need to change this as needed */
    transform: translate(1rem,-2.4rem);
    transform-origin: 0 0; /* Used later for transitions */
    transition: all 500ms;
    
    // Prevents users from highlighting the label.
    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */
    
    pointer-events: none; 
  }

  .form__label__textarea {

    transform: translate(1rem,-7.6rem);
    transform-origin: 0 0; /* Used later for transitions */
 
  }

  
}